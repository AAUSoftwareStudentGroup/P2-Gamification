(function(){"use strict";Bridge.define("ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules",{statics:{productToExponentRule:function(expression,selection){var product,suggestion,indexes,result,i;if(selection.getCount()<2)return null;if(product=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(product)&&product.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply&&Bridge.Linq.Enumerable.from(selection).takeWhile(function(e){return ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(selection.getItem(0),e)&&e.getParent()===expression}).count()===selection.getCount()){if(suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(selection.getItem(0).clone(),new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(selection.getCount()),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power),product.getCount()===selection.getCount())return new ThreeOneSevenBee.Model.Expression.Identity(suggestion,suggestion);for(indexes=Bridge.Linq.Enumerable.from(selection).select(function(s){return product.indexOfReference(s)}).where($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f1).toList(Bridge.Int),indexes.sort(),result=Bridge.as(product.clone(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),i=0;i<indexes.getCount();i++)result.removeAt(indexes.getItem(i)-i);return result.insert(indexes.getItem(0),suggestion),new ThreeOneSevenBee.Model.Expression.Identity(suggestion,result)}return null},exponentToProductRule:function(expression,selection){var exponent,numericExpression,number,result,i;if(selection.getCount()!==2)return null;if(exponent=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(exponent)&&exponent.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power&&selection.getItem(0).getParent()===exponent&&selection.getItem(1).getParent()===exponent){if(numericExpression=Bridge.as(exponent.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),!Bridge.hasValue(numericExpression))return null;if(number=Bridge.Int.trunc(numericExpression.number),number===0)return new ThreeOneSevenBee.Model.Expression.Identity(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1),new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1));if(number===1)return new ThreeOneSevenBee.Model.Expression.Identity(exponent.getLeft().clone(),exponent.getLeft().clone());if(number>1){for(result=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,exponent.getLeft().clone(),exponent.getLeft().clone()),i=2;i<number;i++)result.add(exponent.getLeft().clone());return new ThreeOneSevenBee.Model.Expression.Identity(result,result)}}return null},numericVariadicRule:function(expression,selection){var $t,variadicExpression,sum,operation,selected,numericExpression,indexes,result,i;if(selection.getCount()<2)return null;if(variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(variadicExpression)){if(variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply)sum=1,operation=$_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f2;else if(variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add)sum=0,operation=$_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f3;else return null;for($t=Bridge.getEnumerator(selection);$t.moveNext();){if(selected=$t.getCurrent(),selected.getParent()===variadicExpression==!1)return null;if(numericExpression=Bridge.as(selected,ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),Bridge.hasValue(numericExpression))sum=operation(sum,Bridge.Int.trunc(numericExpression.number));else return null}if(variadicExpression.getCount()===selection.getCount())return new ThreeOneSevenBee.Model.Expression.Identity(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(sum),new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(sum));for(indexes=Bridge.Linq.Enumerable.from(selection).select(function(s){return variadicExpression.indexOfReference(s)}).where($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f1).toList(Bridge.Int),indexes.sort(),result=Bridge.as(variadicExpression.clone(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),i=0;i<indexes.getCount();i++)result.removeAt(indexes.getItem(i)-i);return result.insert(indexes.getItem(0),new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(sum)),new ThreeOneSevenBee.Model.Expression.Identity(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(sum),result)}return null},numericBinaryRule:function(expression,selection){var binaryExpression,numericLeft,numericRight,result,positiveResult;if(selection.getCount()<2)return null;if(binaryExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(binaryExpression)&&selection.getItem(0).getParent()===binaryExpression&&selection.getItem(1).getParent()===binaryExpression&&(numericLeft=Bridge.as(binaryExpression.getLeft(),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),numericRight=Bridge.as(binaryExpression.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),Bridge.hasValue(numericLeft)&&Bridge.hasValue(numericRight))){if(binaryExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.subtract)result=new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(numericLeft.number-numericRight.number);else if(binaryExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power)result=new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(Math.pow(numericLeft.number,numericRight.number));else return null;return result.number>=0?new ThreeOneSevenBee.Model.Expression.Identity(result,result):(result.number*=-1,positiveResult=new ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression(result),new ThreeOneSevenBee.Model.Expression.Identity(positiveResult,positiveResult))}return null},variableWithNegativeExponent:function(expression,selection){var binaryexpression,unaryexpression;if(selection.getCount()<2)return null;if(binaryexpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(binaryexpression)&&binaryexpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power&&selection.getItem(0).getParent()===binaryexpression&&selection.getItem(1).getParent()===binaryexpression&&(unaryexpression=Bridge.as(binaryexpression.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression),Bridge.hasValue(unaryexpression)&&Bridge.hasValue(binaryexpression.getLeft())&&Bridge.hasValue(binaryexpression.getRight()))){var serializer=new ThreeOneSevenBee.Model.Expression.ExpressionSerializer,power=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(binaryexpression.getLeft().clone(),unaryexpression.getExpression().clone(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power),mysuggestion=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1),power,ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide);return new ThreeOneSevenBee.Model.Expression.Identity(mysuggestion,mysuggestion)}return null},reverseVariableWithNegativeExponent:function(expression){var binaryexpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),numericexpression,power,unaryminus,mysuggestion;return Bridge.hasValue(binaryexpression)&&binaryexpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide&&(numericexpression=Bridge.as(binaryexpression.getLeft(),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),power=Bridge.as(binaryexpression.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryExpression),Bridge.hasValue(numericexpression)&&numericexpression.getValue()==="1"&&Bridge.hasValue(power))?(unaryminus=new ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression(power.getRight()),mysuggestion=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(power.getLeft().clone(),unaryminus.clone(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power),new ThreeOneSevenBee.Model.Expression.Identity(mysuggestion,mysuggestion)):null},addFractionsWithSameNumerators:function(expression,selection){var $t,$t1,variadicExpression,firstFraction,secondFraction,numeratorList,selected,fraction,suggestionNumerator,i,suggestion;if(selection.getCount()<2)return null;if(variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(variadicExpression)&&variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add&&(firstFraction=Bridge.as(selection.getItem(0),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),secondFraction=Bridge.as(selection.getItem(1),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(firstFraction)&&Bridge.hasValue(secondFraction)&&firstFraction.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide&&secondFraction.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide)){for(numeratorList=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),numeratorList.add(firstFraction.getLeft().clone()),numeratorList.add(secondFraction.getLeft().clone()),$t=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(selection).skip(2));$t.moveNext();)if(selected=$t.getCurrent(),fraction=Bridge.as(selected,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(fraction)&&fraction.getParent()===variadicExpression&&ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(fraction.getRight(),firstFraction.getRight()))numeratorList.add(fraction.getLeft().clone());else return null;for(suggestionNumerator=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add,firstFraction.getLeft().clone(),secondFraction.getLeft().clone()),$t1=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(numeratorList).skip(2));$t1.moveNext();)i=$t1.getCurrent(),suggestionNumerator.add(i);return suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(suggestionNumerator,firstFraction.getRight().clone(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide),new ThreeOneSevenBee.Model.Expression.Identity(suggestion,suggestion)}return null},exponentProduct:function(expression,selection){var $t,$t1,variadicexpression,numbers,numeratorList,selected,parent,i,suggestionNumerator,i1,suggestion,list,temp,i2,indexes,result,i3;if(selection.getCount()<2)return null;if(variadicexpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(variadicexpression)&&variadicexpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply){var baseSelection=null,firstSelection=null,secondSelection=null;if(baseSelection=selection.getItem(0),firstSelection=Bridge.as(selection.getItem(0).getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryExpression),secondSelection=Bridge.as(selection.getItem(1).getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryExpression),Bridge.hasValue(firstSelection)&&Bridge.hasValue(secondSelection)){for(numeratorList=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),$t=Bridge.getEnumerator(selection);$t.moveNext();)if(selected=$t.getCurrent(),ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(baseSelection,selected)){if(parent=Bridge.as(selected.getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryExpression),Bridge.hasValue(parent)&&parent.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power)if(Bridge.is(parent.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression))numeratorList.add(parent.getRight().clone());else if(Bridge.is(parent.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression))for(numbers=Bridge.cast(parent.getRight().clone(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),i=0;i<numbers.getCount();i++)numeratorList.add(numbers.getItem(i))}else return null;for(suggestionNumerator=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add,numeratorList.getItem(0),numeratorList.getItem(1)),$t1=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(numeratorList).skip(2));$t1.moveNext();)i1=$t1.getCurrent(),suggestionNumerator.add(i1);if(suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(baseSelection.clone(),suggestionNumerator,ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power),variadicexpression.getCount()===selection.getCount())return new ThreeOneSevenBee.Model.Expression.Identity(suggestion,suggestion);for(list=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression)(),temp=null,i2=0;i2<selection.getCount();i2++)temp=Bridge.as(selection.getItem(i2).getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(temp)&&list.add(temp);for(indexes=Bridge.Linq.Enumerable.from(list).select(function(s){return variadicexpression.indexOfReference(s)}).where($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f4).toList(Bridge.Int),indexes.sort(),result=Bridge.as(variadicexpression.clone(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),i3=0;i3<indexes.getCount();i3++)result.removeAt(indexes.getItem(i3)-i3);return result.insert(indexes.getItem(0),suggestion),new ThreeOneSevenBee.Model.Expression.Identity(suggestion,result)}}return null},splittingFractions:function(expression,selection){var $t,$t1,binaryExpression,numeratorType,selectedNumerators,selected,newFraction,listOfNumerators,i,newFraction1;if(selection.getCount()<2)return null;if(binaryExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(binaryExpression)&&binaryExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide&&(numeratorType=Bridge.as(binaryExpression.getLeft(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(numeratorType)&&numeratorType.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add)){for(selectedNumerators=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),$t=Bridge.getEnumerator(selection);$t.moveNext();){if(selected=$t.getCurrent(),!selected.getParent()===binaryExpression)return null;selected.getParent()===binaryExpression.getLeft()&&selectedNumerators.add(selected.clone())}if(selectedNumerators.getCount()<2)return newFraction=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(selectedNumerators.getItem(0),binaryExpression.getRight().clone(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide),new ThreeOneSevenBee.Model.Expression.Identity(newFraction,newFraction);if(selectedNumerators.getCount()>=2){for(listOfNumerators=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add,selectedNumerators.getItem(0),selectedNumerators.getItem(1)),$t1=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(selectedNumerators).skip(2));$t1.moveNext();)i=$t1.getCurrent(),listOfNumerators.add(i);return newFraction1=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(listOfNumerators,binaryExpression.getRight().clone(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide),new ThreeOneSevenBee.Model.Expression.Identity(newFraction1,newFraction1)}}return null}}});var $_={};Bridge.ns("ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules",$_);Bridge.apply($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules,{f1:function(i){return i!==-1},f2:function(a,b){return a*b},f3:function(a,b){return a+b},f4:function(i3){return i3!==-1}});Bridge.init()})(this);