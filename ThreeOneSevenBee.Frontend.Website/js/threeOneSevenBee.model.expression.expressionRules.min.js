(function(){"use strict";Bridge.define("ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules",{statics:{productToExponentRule:function(expression,selection){var product;return selection.getCount()<2?null:(product=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(product)&&product.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply&&Bridge.Linq.Enumerable.from(selection).where(function(e){return ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(selection.getItem(0),e)&&e.getParent()===expression}).count()===selection.getCount())?new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(selection.getItem(0).clone(),new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(selection.getCount()),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power):null},exponentToProductRule:function(expression,selection){var exponent=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),numericExpression,number,result,i;if(Bridge.hasValue(exponent)&&exponent.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power&&selection.getItem(0).getParent()===exponent&&selection.getItem(1).getParent()===exponent){if(numericExpression=Bridge.as(exponent.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),!Bridge.hasValue(numericExpression))return null;if(number=numericExpression.number,number===0)return new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1);if(number===1)return exponent.getLeft().clone();if(number>1){for(result=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,exponent.getLeft().clone(),exponent.getLeft().clone()),i=2;i<number;i++)result.add(exponent.getLeft().clone());return result}}return null},fractionToProductRule:function(expression){var fraction=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryExpression),exponent,suggestion;return Bridge.hasValue(fraction)&&fraction.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide?(exponent=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(new ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression(fraction.getRight().clone()),new ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1)),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power),suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,new ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression(fraction.getLeft().clone()),exponent),suggestion):null},removeParenthesisRule:function(expression){var parenthesis=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression);return Bridge.hasValue(parenthesis)?parenthesis.getExpression().clone():null},numericCalculateRule:function(expression){if(expression.canCalculate()===!0){var result=Bridge.Int.trunc(Bridge.Nullable.getValue(Bridge.Nullable.lift(expression.calculate())));return result>=0?new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(result):new ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(Math.abs(result)))}return null},variableWithNegativeExponent:function(expression){var binaryexpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),unaryexpression,power;return Bridge.hasValue(binaryexpression)&&binaryexpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power&&(unaryexpression=Bridge.as(binaryexpression.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression),Bridge.hasValue(unaryexpression)&&Bridge.hasValue(binaryexpression.getLeft())&&Bridge.hasValue(binaryexpression.getRight()))?(power=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(binaryexpression.getLeft().clone(),unaryexpression.getExpression().clone(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power),new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1),power,ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide)):null},reverseVariableWithNegativeExponent:function(expression){var binaryexpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),numericexpression,power,unaryminus,mysuggestion;return Bridge.hasValue(binaryexpression)&&binaryexpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide&&(numericexpression=Bridge.as(binaryexpression.getLeft(),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),power=Bridge.as(binaryexpression.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryExpression),Bridge.hasValue(numericexpression)&&numericexpression.getValue()==="1"&&Bridge.hasValue(power))?(unaryminus=new ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression(power.getRight()),mysuggestion=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(power.getLeft().clone(),unaryminus.clone(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power),mysuggestion):null},addFractionWithCommonDenominatorRule:function(expression){var $t,variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),binaryOperand,terms,commonDenominator,operand,SuggestionNumerator;if(Bridge.hasValue(variadicExpression)&&variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add){for(terms=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),commonDenominator=null,$t=Bridge.getEnumerator(variadicExpression);$t.moveNext();)if(operand=$t.getCurrent(),binaryOperand=Bridge.as(operand,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(binaryOperand)&&binaryOperand.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide)if(terms.getCount()===0)terms.add(binaryOperand.getLeft().clone()),commonDenominator=binaryOperand.getRight().clone();else if(ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(commonDenominator,binaryOperand.getRight()))terms.add(binaryOperand.getLeft().clone());else return null;else return null;if(terms.getCount()>1)return SuggestionNumerator=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add,terms.getItem(0),terms.getItem(1)),SuggestionNumerator.add$1(Bridge.Linq.Enumerable.from(terms).skip(2).toList(ThreeOneSevenBee.Model.Expression.ExpressionBase)),new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(SuggestionNumerator,commonDenominator,ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide)}return null},exponentProduct:function(expression){var $t,product=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),sum,suggestionLeft,suggestionRight;if(Bridge.hasValue(product)&&product.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply){for(sum=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),suggestionLeft=null,$t=Bridge.getEnumerator(product);$t.moveNext();){var operand=$t.getCurrent(),operandLeft=operand,operandRight=new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1),power=Bridge.as(operand,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression);if(Bridge.hasValue(power)&&power.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power&&(operandLeft=power.getLeft(),operandRight=power.getRight()),ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(operandLeft,suggestionLeft)||!Bridge.hasValue(suggestionLeft))suggestionLeft=operandLeft,sum.add(operandRight.clone());else return null}if(sum.getCount()>1)return suggestionRight=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add,sum.getItem(0),sum.getItem(1)),suggestionRight.add$1(Bridge.Linq.Enumerable.from(sum).skip(2).toList(ThreeOneSevenBee.Model.Expression.ExpressionBase)),new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(suggestionLeft,suggestionRight,ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power)}return null},productParenthesis:function(expression){var $t,sum=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),suggestionSum,commonProductOperands,operand,nonSelectedProduct,sumExpression,suggestion;if(Bridge.hasValue(sum)&&sum.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add){for(suggestionSum=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),commonProductOperands=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),$t=Bridge.getEnumerator(sum);$t.moveNext();){operand=$t.getCurrent();console.log(operand);var selectedProductOperands=Bridge.merge(new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),[[operand]]),nonSelectedProductOperands=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),product=Bridge.as(operand,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression);if(Bridge.hasValue(product)&&product.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply&&(selectedProductOperands=Bridge.Linq.Enumerable.from(product).where($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f2).toList(ThreeOneSevenBee.Model.Expression.ExpressionBase),nonSelectedProductOperands=Bridge.Linq.Enumerable.from(product).where($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f3).toList(ThreeOneSevenBee.Model.Expression.ExpressionBase)),console.log(selectedProductOperands),console.log(nonSelectedProductOperands),Bridge.Linq.Enumerable.from(commonProductOperands).union(selectedProductOperands).count()===commonProductOperands.getCount()||commonProductOperands.getCount()===0)commonProductOperands=selectedProductOperands,nonSelectedProductOperands.getCount()===0?suggestionSum.add(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1)):nonSelectedProductOperands.getCount()===1?suggestionSum.add(nonSelectedProductOperands.getItem(0).clone()):(nonSelectedProduct=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,nonSelectedProductOperands.getItem(0).clone(),nonSelectedProductOperands.getItem(1).clone()),nonSelectedProduct.add$1(Bridge.Linq.Enumerable.from(nonSelectedProductOperands).skip(2).select($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f4).toList(ThreeOneSevenBee.Model.Expression.ExpressionBase)),suggestionSum.add(nonSelectedProduct));else return console.log(Bridge.toArray(commonProductOperands).join(",")+" != "+Bridge.toArray(selectedProductOperands).join(",")),null}return console.log("wat"),sumExpression=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add,suggestionSum.getItem(0),suggestionSum.getItem(1)),sumExpression.add$1(Bridge.Linq.Enumerable.from(suggestionSum).skip(2).toList(ThreeOneSevenBee.Model.Expression.ExpressionBase)),suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,new ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression(sumExpression),new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(-1)),suggestion.add$1(Bridge.Linq.Enumerable.from(commonProductOperands).select($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f4).toList(ThreeOneSevenBee.Model.Expression.ExpressionBase)),suggestion.removeAt(1),suggestion}return null},reverseProductParenthesis:function(expression){var $t,variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),delimiterExpression,other,variadicContent,suggestion,operand;if(Bridge.hasValue(variadicExpression)&&variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply&&variadicExpression.getCount()===2){if(delimiterExpression=Bridge.as(variadicExpression.getItem(1),ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression),other=variadicExpression.getItem(0),Bridge.hasValue(delimiterExpression))variadicContent=Bridge.as(delimiterExpression.getExpression(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression);else if(delimiterExpression=Bridge.as(variadicExpression.getItem(0),ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression),other=variadicExpression.getItem(1),Bridge.hasValue(delimiterExpression))variadicContent=Bridge.as(delimiterExpression.getExpression(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression);else return null;if(Bridge.hasValue(variadicContent)&&variadicContent.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add){for(suggestion=Bridge.as(variadicContent.clone(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),$t=Bridge.getEnumerator(suggestion);$t.moveNext();)operand=$t.getCurrent(),operand.replace(new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,other,operand.clone()));return suggestion}return new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,other,delimiterExpression.getExpression())}return null},splittingFractions:function(expression){var $t,$t1,binaryExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),numerators,fractionList,i,suggestion,i1;if(Bridge.hasValue(binaryExpression)&&binaryExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide&&(numerators=Bridge.as(binaryExpression.getLeft().clone(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(numerators)&&numerators.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add&&numerators.getCount()>1)){for(fractionList=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),$t=Bridge.getEnumerator(numerators);$t.moveNext();)i=$t.getCurrent(),fractionList.add(new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(i,binaryExpression.getRight().clone(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide));for(suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add,fractionList.getItem(0),fractionList.getItem(1)),$t1=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(fractionList).skip(2));$t1.moveNext();)i1=$t1.getCurrent(),suggestion.add(i1);return suggestion}return null},commonPowerParenthesisRule:function(expression,selection){var $t,variadicExpression,baselist,item,selectionParent,suggestion;if(selection.getCount()<2)return null;if(variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(variadicExpression)&&variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply&&Bridge.Linq.Enumerable.from(selection).all($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f5)){var commonPower=null,selectionOne=Bridge.as(selection.getItem(0).getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),selectionTwo=Bridge.as(selection.getItem(1).getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression);if(selection.getItem(0)===selectionOne.getRight()&&selection.getItem(1)===selectionTwo.getRight())commonPower=selection.getItem(0).clone();else return null;if(!Bridge.Linq.Enumerable.from(selection).all(function(e){return ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(e,commonPower)}))return null;for(baselist=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,selectionOne.getLeft().clone(),selectionTwo.getLeft().clone()),$t=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(selection).skip(2));$t.moveNext();)if(item=$t.getCurrent(),selectionParent=Bridge.as(item.getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(item,commonPower)&&selectionParent.getRight()===item)baselist.add(selectionParent.getLeft().clone());else return null;if(suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(new ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression(baselist),commonPower,ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power),variadicExpression.getCount()===selection.getCount())return suggestion}return null},factorizationRule:function(expression,selection){var numericExpression,n,count,a,b;if(selection.getCount()!==1)return null;if(Bridge.is(expression,ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression)&&Bridge.hasValue(expression))for(numericExpression=Bridge.as(selection.getItem(0),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),n=numericExpression.number,count=2;count<n;count++)if(n%count==0)return a=new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(count),b=new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(Bridge.Int.div(n,count)),new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,a,b);return null},reverseCommonPowerParenthesisRule:function(expression,selection){var $t,$t1,binaryExpression,itemsInParenthesis,suggestion,commonparrent,delimiterExpression,variadicExpression,item,item1;if(selection.getCount()!==2)return null;if(binaryExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),itemsInParenthesis=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),Bridge.hasValue(binaryExpression)&&binaryExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power&&(commonparrent=binaryExpression.getRight().clone(),Bridge.is(binaryExpression.getLeft(),ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression)&&(delimiterExpression=Bridge.as(binaryExpression.getLeft(),ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression),Bridge.is(delimiterExpression.getExpression(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression)&&(variadicExpression=Bridge.as(delimiterExpression.getExpression().clone(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply)))){for($t=Bridge.getEnumerator(variadicExpression);$t.moveNext();)item=$t.getCurrent(),itemsInParenthesis.add(new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(item,commonparrent,ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power));if(suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,itemsInParenthesis.getItem(0).clone(),itemsInParenthesis.getItem(1).clone()),itemsInParenthesis.getCount()>2){for($t1=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(itemsInParenthesis).skip(2));$t1.moveNext();)item1=$t1.getCurrent(),suggestion.add(item1.clone());return suggestion}return suggestion}return null},parenthesisPowerRule:function(expression){var binaryOperatorExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),delimiterBase,binaryBase;return Bridge.hasValue(binaryOperatorExpression)&&binaryOperatorExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power&&(delimiterBase=Bridge.as(binaryOperatorExpression.getLeft(),ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression),Bridge.hasValue(delimiterBase)&&(binaryBase=Bridge.as(delimiterBase.getExpression(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(binaryBase)))?new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(binaryBase.getLeft().clone(),new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,binaryBase.getRight().clone(),binaryOperatorExpression.getRight().clone()),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power):null},squareRootRule:function(expression){var sqrtExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.FunctionExpression);return Bridge.hasValue(sqrtExpression)?sqrtExpression.getFunction()!=="sqrt"?null:new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(new ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression(sqrtExpression.getExpression().clone()),new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1),new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(2),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power):null},productOfConstantAndFraction:function(expression){var $t,$t1,variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),fraction,constant,numerators,suggestion;if(!Bridge.hasValue(variadicExpression)||variadicExpression.getType()!==ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply||variadicExpression.getCount()!==2)return null;if(fraction=null,constant=null,Bridge.hasValue(($t=Bridge.as(variadicExpression.getItem(0),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),fraction=$t,$t))&&fraction.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide)constant=variadicExpression.getItem(1);else if(Bridge.hasValue(($t1=Bridge.as(variadicExpression.getItem(1),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),fraction=$t1,$t1))&&fraction.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide)constant=variadicExpression.getItem(0);else return null;return numerators=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,fraction.getLeft().clone(),constant.clone()),suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(numerators.clone(),fraction.getRight().clone(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide),suggestion},divisionEqualsOneRule:function(expression){var fraction=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression);return Bridge.hasValue(fraction)&&fraction.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide&&ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(fraction.getLeft(),fraction.getRight())?new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1):null},factorizeUnaryMinus:function(expression){var unaryMinusExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression),numericExpression,suggestion;return Bridge.hasValue(unaryMinusExpression)?(numericExpression=new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1),suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,new ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression(new ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression(numericExpression)),unaryMinusExpression.getExpression().clone()),suggestion):null},multiplyOneRule:function(expression){var variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),one;if(Bridge.hasValue(variadicExpression)&&variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply&&variadicExpression.getCount()===2){if(one=Bridge.as(variadicExpression.getItem(0),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),variadicExpression.getItem(0).toString()==="1")return variadicExpression.getItem(1).clone();if(variadicExpression.getItem(1).toString()==="1")return variadicExpression.getItem(0).clone()}return null},removeNull:function(expression,selection){if(selection.getCount()!==2)return null;var variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression);return!Bridge.hasValue(variadicExpression)||variadicExpression.getType()!==ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add?null:variadicExpression.getItem(0).toString()==="0"||variadicExpression.getItem(0).toString()==="-{0}"?variadicExpression.getItem(1):variadicExpression.getItem(1).toString()==="0"||variadicExpression.getItem(1).toString()==="-{0}"?variadicExpression.getItem(0):null},multiplyByNull:function(expression,selection){var $t,variadicExpression,item;if(selection.getCount()<2||(variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),!Bridge.hasValue(variadicExpression)||variadicExpression.getType()!==ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply))return null;for($t=Bridge.getEnumerator(variadicExpression);$t.moveNext();)if(item=$t.getCurrent(),item.toString()==="0"||item.toString()==="-{0}")return new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(0);return null}}});var $_={};Bridge.ns("ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules",$_);Bridge.apply($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules,{f1:function(n){return n.getSelected()},f2:function(o){return o.getSelected()===!0||Bridge.Linq.Enumerable.from(o.getNodesRecursive()).any($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f1)},f3:function(o){return o.getSelected()===!1&&Bridge.Linq.Enumerable.from(o.getNodesRecursive()).any($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f1)===!1},f4:function(o){return o.clone()},f5:function(s){return Bridge.is(s.getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression)&&Bridge.as(s.getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression).getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power}});Bridge.init()})(this);