(function(){"use strict";Bridge.define("ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules",{statics:{productToExponentRule:function(expression,selection){var product;return selection.getCount()<2?null:(product=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(product)&&product.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply&&Bridge.Linq.Enumerable.from(selection).where(function(e){return ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(selection.getItem(0),e)&&e.getParent()===expression}).count()===selection.getCount())?new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(selection.getItem(0).clone(),new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(selection.getCount()),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power):null},exponentToProductRule:function(expression,selection){var exponent=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),numericExpression,number,result,i;if(Bridge.hasValue(exponent)&&exponent.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power&&selection.getItem(0).getParent()===exponent&&selection.getItem(1).getParent()===exponent){if(numericExpression=Bridge.as(exponent.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),!Bridge.hasValue(numericExpression))return null;if(number=numericExpression.number,number===0)return new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1);if(number===1)return exponent.getLeft().clone();if(number>1){for(result=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,exponent.getLeft().clone(),exponent.getLeft().clone()),i=2;i<number;i++)result.add(exponent.getLeft().clone());return result}}return null},fractionToProductRule:function(expression,selection){var fraction=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryExpression),exponent,suggestion;return selection.getCount()===1&&selection.getItem(0)===expression&&Bridge.hasValue(fraction)&&fraction.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide?(exponent=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(new ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression(fraction.getRight().clone()),new ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1)),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power),suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,new ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression(fraction.getLeft().clone()),exponent),suggestion):null},removeParenthesisRule:function(expression){var parenthesis=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression);return Bridge.hasValue(parenthesis)?parenthesis.getExpression():null},numericCalculateRule:function(expression){if(expression.canCalculate()===!0){var result=Bridge.Int.trunc(Bridge.Nullable.getValue(Bridge.Nullable.lift(expression.calculate())));return result>=0?new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(result):new ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(Math.abs(result)))}return null},numericBinaryRule:function(expression,selection){var binaryExpression,numericLeft,numericRight,result;if(selection.getCount()<2)return null;if(binaryExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(binaryExpression)&&selection.getItem(0).getParent()===binaryExpression&&selection.getItem(1).getParent()===binaryExpression&&(numericLeft=Bridge.as(binaryExpression.getLeft(),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),numericRight=Bridge.as(binaryExpression.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),Bridge.hasValue(numericLeft)&&Bridge.hasValue(numericRight))){if(binaryExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.subtract)result=new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(numericLeft.number-numericRight.number);else if(binaryExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power)result=new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(Bridge.Int.trunc(Math.pow(numericLeft.number,numericRight.number)));else return null;return result.number>=0?result:(result.number*=-1,new ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression(result))}return null},variableWithNegativeExponent:function(expression,selection){var binaryexpression,unaryexpression;if(selection.getCount()<2)return null;if(binaryexpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(binaryexpression)&&binaryexpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power&&selection.getItem(0).getParent()===binaryexpression&&selection.getItem(1).getParent()===binaryexpression&&(unaryexpression=Bridge.as(binaryexpression.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression),Bridge.hasValue(unaryexpression)&&Bridge.hasValue(binaryexpression.getLeft())&&Bridge.hasValue(binaryexpression.getRight()))){var serializer=new ThreeOneSevenBee.Model.Expression.ExpressionSerializer,power=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(binaryexpression.getLeft().clone(),unaryexpression.getExpression().clone(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power);return new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1),power,ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide)}return null},reverseVariableWithNegativeExponent:function(expression){var binaryexpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),numericexpression,power,unaryminus,mysuggestion;return Bridge.hasValue(binaryexpression)&&binaryexpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide&&(numericexpression=Bridge.as(binaryexpression.getLeft(),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),power=Bridge.as(binaryexpression.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryExpression),Bridge.hasValue(numericexpression)&&numericexpression.getValue()==="1"&&Bridge.hasValue(power))?(unaryminus=new ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression(power.getRight()),mysuggestion=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(power.getLeft().clone(),unaryminus.clone(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power),mysuggestion):null},addFractionsWithSameNumerators:function(expression,selection){var $t,$t1,variadicExpression,firstFraction,secondFraction,numeratorList,suggestionNumerator,i,suggestion;if(selection.getCount()<2)return null;if(variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(variadicExpression)&&variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add&&(firstFraction=Bridge.as(selection.getItem(0).clone(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),secondFraction=Bridge.as(selection.getItem(1).clone(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(firstFraction)&&Bridge.hasValue(secondFraction)&&firstFraction.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide&&secondFraction.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide)){for(numeratorList=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),$t=Bridge.getEnumerator(selection);$t.moveNext();){var selected=$t.getCurrent(),fraction=Bridge.as(selected,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),minusFraction=Bridge.as(fraction.getParent(),ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression);Bridge.hasValue(fraction)&&fraction.getParent()===variadicExpression&&ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(fraction.getRight(),firstFraction.getRight())?numeratorList.add(fraction.getLeft().clone()):Bridge.hasValue(minusFraction)&&minusFraction.getParent()===variadicExpression&&ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(fraction.getRight(),firstFraction.getRight())&&numeratorList.add(new ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression(fraction.getLeft().clone()))}for(suggestionNumerator=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add,numeratorList.getItem(0),numeratorList.getItem(1)),$t1=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(numeratorList).skip(2));$t1.moveNext();)i=$t1.getCurrent(),suggestionNumerator.add(i);if(suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(suggestionNumerator,firstFraction.getRight().clone(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide),variadicExpression.getCount()===selection.getCount())return suggestion}return null},exponentProduct:function(expression,selection){var $t,variadicExpression,baseSelection,variableIsPowerToOne,numeratorList,j,parent,numbers,i,suggestionNumerator,i1,suggestion;if(selection.getCount()<2)return null;if(variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(variadicExpression)&&variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply&&(baseSelection=selection.getItem(0).clone(),variableIsPowerToOne=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression)(),Bridge.Linq.Enumerable.from(selection).all(function(s){return Bridge.is(s.getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression)&&Bridge.as(s.getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression).getLeft()===s&&s.getParent().getParent()===expression||s.getParent()===expression}))){if(Bridge.Linq.Enumerable.from(selection).any($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f1))return null;for(numeratorList=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),j=0;j<selection.getCount();j++)if(ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(baseSelection,selection.getItem(j)))if(parent=Bridge.as(selection.getItem(j).getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(parent)&&parent.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power)if(Bridge.is(parent.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression)){if(numbers=Bridge.cast(parent.getRight().clone(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),numbers.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add)for(i=0;i<numbers.getCount();i++)numeratorList.add(numbers.getItem(i))}else numeratorList.add(parent.getRight().clone());else Bridge.is(selection.getItem(j).getParent(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression)&&numeratorList.add(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1));else return null;for(suggestionNumerator=null,suggestionNumerator=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add,numeratorList.getItem(0),numeratorList.getItem(1)),$t=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(numeratorList).skip(2));$t.moveNext();)i1=$t.getCurrent(),suggestionNumerator.add(i1);if(suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(baseSelection.clone(),suggestionNumerator,ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power),variadicExpression.getCount()===selection.getCount())return suggestion}return null},productParenthesis:function(expression,selection){var $t,$t1,variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),selectionBase,list,selected,selectedParent,withinDelimiter,item,DelimiterExpression,suggestion;if(!Bridge.hasValue(variadicExpression)||variadicExpression.getType()!==ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add||selection.getCount()<2||!Bridge.Linq.Enumerable.from(selection).all($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f2)||(selectionBase=selection.getItem(0).clone(),Bridge.Linq.Enumerable.from(selection).any(function(s){return ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Inequality(s,selectionBase)})))return null;for(list=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),$t=Bridge.getEnumerator(selection);$t.moveNext();)if(selected=$t.getCurrent(),selectedParent=Bridge.as(selected.getParent().clone(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(selectedParent)&&selectedParent.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply)selectedParent.remove(selected),selectedParent.getCount()<2?list.add(selectedParent.getItem(0)):list.add(selectedParent);else return null;if(list.getCount()<2)return null;if(withinDelimiter=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add,list.getItem(0),list.getItem(1)),list.getCount()>2)for($t1=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(list).skip(2));$t1.moveNext();)item=$t1.getCurrent(),withinDelimiter.add(item);return(DelimiterExpression=new ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression(withinDelimiter),suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,selectionBase,DelimiterExpression),selection.getCount()===variadicExpression.getCount())?suggestion:null},reverseProductParenthesis:function(expression,selection){var $t,$t1,$t2,variadicExpression,delimiterExpression,notParenthesis,suggestionList,expressionType,item,tempList,item1,temp,suggestion,item2;if(selection.getCount()!==2||(variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),!(Bridge.hasValue(variadicExpression)&&variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply))||!(Bridge.is(selection.getItem(0),ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression)||Bridge.is(selection.getItem(1),ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression))||(Bridge.is(selection.getItem(0),ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression)?(delimiterExpression=Bridge.as(selection.getItem(0),ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression),notParenthesis=selection.getItem(1)):(delimiterExpression=Bridge.as(selection.getItem(1),ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression),notParenthesis=selection.getItem(0)),suggestionList=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),expressionType=Bridge.as(delimiterExpression.getExpression(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),!(Bridge.hasValue(expressionType)&&expressionType.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add)))return null;for($t=Bridge.getEnumerator(expressionType);$t.moveNext();)item=$t.getCurrent(),suggestionList.add(item);for(tempList=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression)(),$t1=Bridge.getEnumerator(suggestionList);$t1.moveNext();)item1=$t1.getCurrent(),temp=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,notParenthesis.clone(),item1.clone()),tempList.add(temp);for(suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add,tempList.getItem(0),tempList.getItem(1)),$t2=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(tempList).skip(2));$t2.moveNext();)item2=$t2.getCurrent(),suggestion.add$3(item2);return suggestion},splittingFractions:function(expression){var $t,$t1,binaryExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),numerators,fractionList,i,suggestion,i1;if(Bridge.hasValue(binaryExpression)&&binaryExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide&&(numerators=Bridge.as(binaryExpression.getLeft().clone(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(numerators)&&numerators.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add&&numerators.getCount()>1)){for(fractionList=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),$t=Bridge.getEnumerator(numerators);$t.moveNext();)i=$t.getCurrent(),fractionList.add(new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(i,binaryExpression.getRight().clone(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide));for(suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add,fractionList.getItem(0),fractionList.getItem(1)),$t1=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(fractionList).skip(2));$t1.moveNext();)i1=$t1.getCurrent(),suggestion.add(i1);return suggestion}return null},commonPowerParenthesisRule:function(expression,selection){var $t,variadicExpression,baselist,item,selectionParent,suggestion;if(selection.getCount()<2)return null;if(variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),Bridge.hasValue(variadicExpression)&&variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply&&Bridge.Linq.Enumerable.from(selection).all($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules.f3)){var commonPower=null,selectionOne=Bridge.as(selection.getItem(0).getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),selectionTwo=Bridge.as(selection.getItem(1).getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression);if(selection.getItem(0)===selectionOne.getRight()&&selection.getItem(1)===selectionTwo.getRight())commonPower=selection.getItem(0).clone();else return null;if(!Bridge.Linq.Enumerable.from(selection).all(function(e){return ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(e,commonPower)}))return null;for(baselist=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,selectionOne.getLeft().clone(),selectionTwo.getLeft().clone()),$t=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(selection).skip(2));$t.moveNext();)if(item=$t.getCurrent(),selectionParent=Bridge.as(item.getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(item,commonPower)&&selectionParent.getRight()===item)baselist.add(selectionParent.getLeft().clone());else return null;if(suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(new ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression(baselist),commonPower,ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power),variadicExpression.getCount()===selection.getCount())return suggestion}return null},factorizationRule:function(expression,selection){var numericExpression,n,count,a,b;if(selection.getCount()!==1)return null;if(Bridge.is(expression,ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression)&&Bridge.hasValue(expression))for(numericExpression=Bridge.as(selection.getItem(0),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),n=numericExpression.number,count=2;count<n;count++)if(n%count==0)return a=new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(count),b=new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(Bridge.Int.div(n,count)),new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,a,b);return null},reverseCommonPowerParenthesisRule:function(expression,selection){var $t,$t1,binaryExpression,itemsInParenthesis,suggestion,commonparrent,delimiterExpression,variadicExpression,item,item1;if(selection.getCount()!==2)return null;if(binaryExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),itemsInParenthesis=new Bridge.List$1(ThreeOneSevenBee.Model.Expression.ExpressionBase)(),Bridge.hasValue(binaryExpression)&&binaryExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power&&(commonparrent=binaryExpression.getRight().clone(),Bridge.is(binaryExpression.getLeft(),ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression)&&(delimiterExpression=Bridge.as(binaryExpression.getLeft(),ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression),Bridge.is(delimiterExpression.getExpression(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression)&&(variadicExpression=Bridge.as(delimiterExpression.getExpression().clone(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply)))){for($t=Bridge.getEnumerator(variadicExpression);$t.moveNext();)item=$t.getCurrent(),itemsInParenthesis.add(new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(item,commonparrent,ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power));if(suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,itemsInParenthesis.getItem(0).clone(),itemsInParenthesis.getItem(1).clone()),itemsInParenthesis.getCount()>2){for($t1=Bridge.getEnumerator(Bridge.Linq.Enumerable.from(itemsInParenthesis).skip(2));$t1.moveNext();)item1=$t1.getCurrent(),suggestion.add(item1.clone());return suggestion}return suggestion}return null},parenthesisPowerRule:function(expression){var binaryOperatorExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),delimiterBase,binaryBase;return Bridge.hasValue(binaryOperatorExpression)&&binaryOperatorExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power&&(delimiterBase=Bridge.as(binaryOperatorExpression.getLeft(),ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression),Bridge.hasValue(delimiterBase)&&(binaryBase=Bridge.as(delimiterBase.getExpression(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),Bridge.hasValue(binaryBase)))?new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(binaryBase.getLeft().clone(),new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,binaryBase.getRight().clone(),binaryOperatorExpression.getRight().clone()),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power):null},squareRootRule:function(expression){var sqrtExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.FunctionExpression);return Bridge.hasValue(sqrtExpression)?sqrtExpression.getFunction()!=="sqrt"?null:new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(new ThreeOneSevenBee.Model.Expression.Expressions.DelimiterExpression(sqrtExpression.getExpression().clone()),new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1),new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(2),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power):null},productOfConstantAndFraction:function(expression){var $t,$t1,variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),fraction,constant,numerators,suggestion;if(!Bridge.hasValue(variadicExpression)||variadicExpression.getType()!==ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply||variadicExpression.getCount()!==2)return null;if(fraction=null,constant=null,Bridge.hasValue(($t=Bridge.as(variadicExpression.getItem(0),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),fraction=$t,$t))&&fraction.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide&&variadicExpression.getItem(0).getParent()===expression)constant=Bridge.Linq.Enumerable.from(variadicExpression.getItem(1).getParentPath()).first(function(e){return e.getParent()===expression}).clone();else if(Bridge.hasValue(($t1=Bridge.as(variadicExpression.getItem(1),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression),fraction=$t1,$t1))&&fraction.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide&&variadicExpression.getItem(1).getParent()===expression)constant=Bridge.Linq.Enumerable.from(variadicExpression.getItem(0).getParentPath()).first(function(e){return e.getParent()===expression}).clone();else return null;return numerators=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,fraction.getLeft(),constant),suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression(numerators,fraction.getRight(),ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide),suggestion},divisionEqualsOneRule:function(expression){var fraction=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression);return Bridge.hasValue(fraction)&&fraction.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.divide&&ThreeOneSevenBee.Model.Expression.ExpressionBase.op_Equality(fraction.getLeft(),fraction.getRight())?new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1):null},factorizeUnaryMinus:function(expression){var unaryMinusExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression),numericExpression,suggestion;return Bridge.hasValue(unaryMinusExpression)?(numericExpression=new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(1),suggestion=new ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression("constructor",ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply,new ThreeOneSevenBee.Model.Expression.Expressions.UnaryMinusExpression(numericExpression),unaryMinusExpression.getExpression().clone()),suggestion):null},multiplyOneRule:function(expression){var variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),one;if(Bridge.hasValue(variadicExpression)&&variadicExpression.getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply&&variadicExpression.getCount()===2){if(one=Bridge.as(variadicExpression.getItem(0),ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression),variadicExpression.getItem(0).toString()==="1")return variadicExpression.getItem(1).clone();if(variadicExpression.getItem(1).toString()==="1")return variadicExpression.getItem(0).clone()}return null},removeNull:function(expression,selection){if(selection.getCount()!==2)return null;var variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression);return!Bridge.hasValue(variadicExpression)||variadicExpression.getType()!==ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.add?null:variadicExpression.getItem(0).toString()==="0"||variadicExpression.getItem(0).toString()==="-{0}"?variadicExpression.getItem(1):variadicExpression.getItem(1).toString()==="0"||variadicExpression.getItem(1).toString()==="-{0}"?variadicExpression.getItem(0):null},multiplyByNull:function(expression,selection){var $t,variadicExpression,item;if(selection.getCount()<2||(variadicExpression=Bridge.as(expression,ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression),!Bridge.hasValue(variadicExpression)||variadicExpression.getType()!==ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.multiply))return null;for($t=Bridge.getEnumerator(variadicExpression);$t.moveNext();)if(item=$t.getCurrent(),item.toString()==="0"||item.toString()==="-{0}")return new ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression(0);return null}}});var $_={};Bridge.ns("ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules",$_);Bridge.apply($_.ThreeOneSevenBee.Model.Expression.ExpressionRules.Rules,{f1:function(s){return Bridge.hasValue(s.getParent())&&Bridge.is(s.getParent(),ThreeOneSevenBee.Model.Expression.Expressions.VariadicOperatorExpression)&&Bridge.is(s.getParent().getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression)&&Bridge.as(s.getParent().getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression).getLeft()===s==!1},f2:function(e){return Bridge.is(e,ThreeOneSevenBee.Model.Expression.Expressions.VariableExpression)||Bridge.is(e,ThreeOneSevenBee.Model.Expression.Expressions.NumericExpression)||Bridge.is(e,ThreeOneSevenBee.Model.Expression.Expressions.ConstantExpression)},f3:function(s){return Bridge.is(s.getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression)&&Bridge.as(s.getParent(),ThreeOneSevenBee.Model.Expression.Expressions.BinaryOperatorExpression).getType()===ThreeOneSevenBee.Model.Expression.Expressions.OperatorType.power}});Bridge.init()})(this);